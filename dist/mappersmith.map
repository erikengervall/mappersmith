{"version":3,"sources":["webpack://mappersmith/webpack/universalModuleDefinition","webpack://mappersmith/webpack/bootstrap","webpack://mappersmith/./src/utils.js","webpack://mappersmith/./src/method-descriptor.js","webpack://mappersmith/./src/manifest.js","webpack://mappersmith/./src/request.js","webpack://mappersmith/./src/client-builder.js","webpack://mappersmith/./src/mappersmith.js","webpack://mappersmith/./src/index.js","webpack://mappersmith/./src/response.js","webpack://mappersmith/./src/gateway/timeout-error.js","webpack://mappersmith/./src/gateway.js","webpack://mappersmith/./src/gateway/xhr.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_process","getNanoSeconds","loadTime","eval","e","hasProcessHrtime","hrtime","hr","R20","validKeys","entry","keys","filter","undefined","buildRecursive","suffix","isArray","Array","isObject","_typeof","map","v","join","k","concat","encodeURIComponent","toQueryString","isPlainObject","replace","performanceNow","Date","now","parseResponseHeaders","headerStr","headers","headerPairs","split","length","headerPair","index","indexOf","substring","toLowerCase","trim","val","lowerCaseObjectKeys","obj","reduce","target","assign","arguments","source","toString","getPrototypeOf","CHARS","btoa","input","block","charCode","output","str","String","idx","charAt","charCodeAt","Error","MethodDescriptor","this","host","path","method","params","queryParamAlias","binary","bodyAttr","headersAttr","authAttr","timeoutAttr","resourceMiddleware","middleware","middlewares","Manifest","_ref","_ref$gatewayConfigs","gatewayConfigs","_ref$middleware","_ref$context","context","clientId","resources","clientMiddleware","ignoreGlobalMiddleware","_toConsumableArray","eachResource","callback","_this","forEach","resourceName","methods","eachMethod","methodName","descriptor","createMethodDescriptor","definition","createMiddleware","_this2","args","resourceMethod","middlewareFactory","__name","response","next","prepareRequest","_this3","request","then","req","REGEXP_DYNAMIC_SEGMENT","REGEXP_TRAILING_SLASH","Request","methodDescriptor","requestParams","pattern","RegExp","test","missingDynamicSegmentMatch","match","aliasedParams","aliased","queryString","hasQuery","includes","url","header","body","auth","timeout","enhance","extras","headerKey","bodyKey","authKey","timeoutKey","isBinary","ClientBuilder","manifest","GatewayClassFactory","configs","Promise","maxMiddlewareStackExecutionAllowed","build","client","_manifest","buildResource","resource","invokeMiddlewares","initialRequest","GatewayClass","requestPhaseFailureContext","returnedInvalidRequest","abortExecution","abort","error","resolve","typeValue","prettyType","catch","executions","reject","executeMiddlewareStack","message","stack","finalRequest","renew","execute","__webpack_exports__","version","mappersmith_configs","mappersmith_setContext","forge","fetch","gateway","emulateHTTP","enableHTTP408OnTimeouts","XHR","withCredentials","configure","HTTP","Fetch","credentials","setContext","lib","require","defaultGateway","XMLHttpRequest","default","REGEXP_CONTENT_TYPE_JSON","Response","originalRequest","responseStatus","responseData","responseHeaders","errors","maskedAuth","password","timeElapsed","status","success","rawData","data","isContentTypeJSON","JSON","parse","lastError","createTimeoutError","REGEXP_EMULATE_HTTP","Gateway","successCallback","failCallback","extends","options","shouldEmulateHTTP","_arguments","timeStart","defaultConfigs","apply","dispatchClientError","dispatchResponse","prepareBody","_method","bodyString","toBase64","xmlHttpRequest","createXHR","open","setHeaders","configureTimeout","configureBinary","send","head","post","performRequest","put","patch","delete","responseType","canceled","timer","addEventListener","clearTimeout","setTimeout","configureCallbacks","createResponse","guessedErrorCause","responseText","errorMessage","enhancedMessage","xhrOptions","requestMethod","toUpperCase","customHeaders","push","getAllResponseHeaders","username","headerName","setRequestHeader"],"mappings":"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","file":"mappersmith.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mappersmith\"] = factory();\n\telse\n\t\troot[\"mappersmith\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","let _process, getNanoSeconds, loadTime\ntry { _process = eval('typeof __TEST_WEB__ === \"undefined\" && typeof process === \"object\" ? process : undefined') } catch (e) {} // eslint-disable-line no-eval\n\nconst hasProcessHrtime = () => {\n  return (typeof _process !== 'undefined' && _process !== null) && _process.hrtime\n}\n\nif (hasProcessHrtime()) {\n  getNanoSeconds = () => {\n    const hr = _process.hrtime()\n    return hr[0] * 1e9 + hr[1]\n  }\n  loadTime = getNanoSeconds()\n}\n\nconst R20 = /%20/g\n\nexport const validKeys = (entry) => Object\n  .keys(entry)\n  .filter((key) => entry[key] !== undefined && entry[key] !== null)\n\nexport const buildRecursive = (key, value, suffix) => {\n  suffix = suffix || ''\n  const isArray = Array.isArray(value)\n  const isObject = typeof value === 'object'\n\n  if (!isArray && !isObject) {\n    return `${encodeURIComponent(key + suffix)}=${encodeURIComponent(value)}`\n  }\n\n  if (isArray) {\n    return value\n      .map((v) => buildRecursive(key, v, suffix + '[]'))\n      .join('&')\n  }\n\n  return validKeys(value)\n    .map((k) => buildRecursive(key, value[k], suffix + '[' + k + ']'))\n    .join('&')\n}\n\nexport function toQueryString (entry) {\n  if (!isPlainObject(entry)) {\n    return entry\n  }\n\n  return validKeys(entry)\n    .map((key) => buildRecursive(key, entry[key]))\n    .join('&')\n    .replace(R20, '+')\n}\n\n/**\n * Gives time in miliseconds, but with sub-milisecond precision for Browser\n * and Nodejs\n */\nexport function performanceNow () {\n  if (hasProcessHrtime()) {\n    return (getNanoSeconds() - loadTime) / 1e6\n  }\n\n  return Date.now()\n}\n\n/**\n * borrowed from: {@link https://gist.github.com/monsur/706839}\n * XmlHttpRequest's getAllResponseHeaders() method returns a string of response\n * headers according to the format described here:\n * {@link http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method}\n * This method parses that string into a user-friendly key/value pair object.\n */\nexport function parseResponseHeaders (headerStr) {\n  const headers = {}\n  if (!headerStr) {\n    return headers\n  }\n\n  const headerPairs = headerStr.split('\\u000d\\u000a')\n  for (let i = 0; i < headerPairs.length; i++) {\n    const headerPair = headerPairs[i]\n    // Can't use split() here because it does the wrong thing\n    // if the header value has the string \": \" in it.\n    const index = headerPair.indexOf('\\u003a\\u0020')\n    if (index > 0) {\n      const key = headerPair.substring(0, index).toLowerCase().trim()\n      const val = headerPair.substring(index + 2).trim()\n      headers[key] = val\n    }\n  }\n  return headers\n}\n\nexport function lowerCaseObjectKeys (obj) {\n  return Object\n    .keys(obj)\n    .reduce((target, key) => {\n      target[key.toLowerCase()] = obj[key]\n      return target\n    }, {})\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nexport const assign = Object.assign || function (target) {\n  for (let i = 1; i < arguments.length; i++) {\n    const source = arguments[i]\n    for (let key in source) {\n      if (hasOwnProperty.call(source, key)) {\n        target[key] = source[key]\n      }\n    }\n  }\n  return target\n}\n\nconst toString = Object.prototype.toString\nexport function isPlainObject (value) {\n  return toString.call(value) === '[object Object]' &&\n    Object.getPrototypeOf(value) === Object.getPrototypeOf({})\n}\n\n/**\n * borrowed from: {@link https://github.com/davidchambers/Base64.js}\n */\nconst CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\nexport const btoa = (input) => {\n  let output = ''\n  let map = CHARS\n  const str = String(input)\n  for (\n    // initialize result and counter\n    let block, charCode, idx = 0;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4)\n    if (charCode > 0xFF) {\n      throw new Error(\"[Mappersmith] 'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\")\n    }\n    block = block << 8 | charCode\n  }\n  return output\n}\n","/**\n * @typedef MethodDescriptor\n * @param {Object} obj\n *   @param {String} obj.host\n *   @param {String} obj.path\n *   @param {String} obj.method\n *   @param {Object} obj.headers\n *   @param {Object} obj.params\n *   @param {Object} obj.queryParamAlias\n *   @param {String} obj.bodyAttr - body attribute name. Default: 'body'\n *   @param {String} obj.headersAttr - headers attribute name. Default: 'headers'\n *   @param {String} obj.authAttr - auth attribute name. Default: 'auth'\n *   @param {Number} obj.timeoutAttr - timeout attribute name. Default: 'timeout'\n */\nexport default function MethodDescriptor (obj) {\n  this.host = obj.host\n  this.path = obj.path\n  this.method = obj.method || 'get'\n  this.headers = obj.headers\n  this.params = obj.params\n  this.queryParamAlias = obj.queryParamAlias || {}\n  this.binary = obj.binary || false\n\n  this.bodyAttr = obj.bodyAttr || 'body'\n  this.headersAttr = obj.headersAttr || 'headers'\n  this.authAttr = obj.authAttr || 'auth'\n  this.timeoutAttr = obj.timeoutAttr || 'timeout'\n\n  const resourceMiddleware = obj.middleware || obj.middlewares || []\n  this.middleware = resourceMiddleware\n}\n","import MethodDescriptor from './method-descriptor'\nimport { assign } from './utils'\n\n/**\n * @typedef Manifest\n * @param {Object} obj\n *   @param {String} obj.host\n *   @param {Object} obj.gatewayConfigs - default: base values from mappersmith\n *   @param {Object} obj.ignoreGlobalMiddleware - default: false\n *   @param {Object} obj.resources - default: {}\n *   @param {Array}  obj.middleware or obj.middlewares - default: []\n * @param {Object} globalConfigs\n */\nfunction Manifest (obj, { gatewayConfigs = null, middleware = [], context = {} }) {\n  this.host = obj.host\n  this.bodyAttr = obj.bodyAttr\n  this.headersAttr = obj.headersAttr\n  this.authAttr = obj.authAttr\n  this.timeoutAttr = obj.timeoutAttr\n  this.clientId = obj.clientId || null\n  this.gatewayConfigs = assign({}, gatewayConfigs, obj.gatewayConfigs)\n  this.resources = obj.resources || {}\n  this.context = context\n\n  const clientMiddleware = obj.middleware || obj.middlewares || []\n\n  // TODO: deprecate obj.middlewares in favor of obj.middleware\n  if (obj.ignoreGlobalMiddleware) {\n    this.middleware = clientMiddleware\n  } else {\n    this.middleware = [...clientMiddleware, ...middleware]\n  }\n}\n\nManifest.prototype = {\n  eachResource (callback) {\n    Object.keys(this.resources).forEach(resourceName => {\n      const methods = this.eachMethod(resourceName, methodName => ({\n        name: methodName,\n        descriptor: this.createMethodDescriptor(resourceName, methodName)\n      }))\n\n      callback(resourceName, methods)\n    })\n  },\n\n  eachMethod (resourceName, callback) {\n    return Object.keys(this.resources[resourceName]).map(callback)\n  },\n\n  createMethodDescriptor (resourceName, methodName) {\n    const definition = this.resources[resourceName][methodName]\n\n    if (!definition || !definition.path) {\n      throw new Error(\n        `[Mappersmith] path is undefined for resource \"${resourceName}\" method \"${methodName}\"`\n      )\n    }\n\n    return new MethodDescriptor(\n      assign(\n        {\n          host: this.host,\n          bodyAttr: this.bodyAttr,\n          headersAttr: this.headersAttr,\n          authAttr: this.authAttr,\n          timeoutAttr: this.timeoutAttr\n        },\n        definition\n      )\n    )\n  },\n\n  /**\n   * @param {Object} args\n   *   @param {String|Null} args.clientId\n   *   @param {String} args.resourceName\n   *   @param {String} args.resourceMethod\n   *   @param {Object} args.context\n   *   @param {Boolean} args.mockRequest\n   *\n   * @return {Array<Object>}\n   */\n  createMiddleware (args = {}) {\n    const createInstance = middlewareFactory =>\n      assign(\n        {\n          __name: middlewareFactory.name || middlewareFactory.toString(),\n          response (next) {\n            return next()\n          },\n          /**\n           * @since 2.27.0\n           * Replaced the request method\n           */\n          prepareRequest (next) {\n            return this.request ? next().then(req => this.request(req)) : next()\n          }\n        },\n        middlewareFactory(\n          assign(args, {\n            clientId: this.clientId,\n            context: assign({}, this.context)\n          })\n        )\n      )\n\n    const { resourceName: name, resourceMethod: method } = args\n    const resourceMiddleware = this.createMethodDescriptor(name, method).middleware\n    const middlewares = [...resourceMiddleware, ...this.middleware]\n\n    return middlewares.map(createInstance)\n  }\n}\n\nexport default Manifest\n","import { toQueryString, lowerCaseObjectKeys, assign } from './utils'\n\nconst REGEXP_DYNAMIC_SEGMENT = /{([^}]+)}/\nconst REGEXP_TRAILING_SLASH = /\\/$/\n\n/**\n * @typedef Request\n * @param {MethodDescriptor} methodDescriptor\n * @param {Object} requestParams, defaults to an empty object ({})\n */\nfunction Request (methodDescriptor, requestParams) {\n  this.methodDescriptor = methodDescriptor\n  this.requestParams = requestParams || {}\n}\n\nRequest.prototype = {\n  /**\n   * @return {Object}\n   */\n  params () {\n    const params = assign(\n      {},\n      this.methodDescriptor.params,\n      this.requestParams\n    )\n\n    const isParam = (key) => (\n      key !== this.methodDescriptor.headersAttr &&\n        key !== this.methodDescriptor.bodyAttr &&\n        key !== this.methodDescriptor.authAttr &&\n        key !== this.methodDescriptor.timeoutAttr\n    )\n\n    return Object\n      .keys(params)\n      .reduce((obj, key) => {\n        if (isParam(key)) {\n          obj[key] = params[key]\n        }\n        return obj\n      }, {})\n  },\n\n  /**\n   * Returns the HTTP method in lowercase\n   *\n   * @return {String}\n   */\n  method () {\n    return this.methodDescriptor.method.toLowerCase()\n  },\n\n  /**\n   * Returns host name without trailing slash\n   * Example: http://example.org\n   *\n   * @return {String}\n   */\n  host () {\n    return (this.methodDescriptor.host || '').replace(REGEXP_TRAILING_SLASH, '')\n  },\n\n  /**\n   * Returns path with parameters and leading slash.\n   * Example: /some/path?param1=true\n   *\n   * @throws {Error} if any dynamic segment is missing.\n   * Example:\n   * Imagine the path '/some/{name}', the error will be similar to:\n   * '[Mappersmith] required parameter missing (name), \"/some/{name}\" cannot be resolved'\n   *\n   * @return {String}\n   */\n  path () {\n    let path = this.methodDescriptor.path\n\n    if (this.methodDescriptor.path[0] !== '/') {\n      path = `/${this.methodDescriptor.path}`\n    }\n\n    const params = this.params()\n    Object.keys(params).forEach((key) => {\n      const value = params[key]\n      const pattern = `{${key}}`\n\n      if (new RegExp(pattern).test(path)) {\n        path = path.replace(`{${key}}`, encodeURIComponent(value))\n        delete params[key]\n      }\n    })\n\n    const missingDynamicSegmentMatch = path.match(REGEXP_DYNAMIC_SEGMENT)\n    if (missingDynamicSegmentMatch) {\n      throw new Error(\n        `[Mappersmith] required parameter missing (${missingDynamicSegmentMatch[1]}), \"${path}\" cannot be resolved`\n      )\n    }\n\n    const aliasedParams = Object.keys(params).reduce((aliased, key) => {\n      const aliasedKey = this.methodDescriptor.queryParamAlias[key] || key\n      aliased[aliasedKey] = params[key]\n      return aliased\n    }, {})\n\n    const queryString = toQueryString(aliasedParams)\n    if (queryString.length !== 0) {\n      const hasQuery = path.includes('?')\n      path += `${hasQuery ? '&' : '?'}${queryString}`\n    }\n\n    return path\n  },\n\n  /**\n   * Returns the full URL\n   * Example: http://example.org/some/path?param1=true\n   *\n   * @return {String}\n   */\n  url () {\n    return `${this.host()}${this.path()}`\n  },\n\n  /**\n   * Returns an object with the headers. Header names are converted to\n   * lowercase\n   *\n   * @return {Object}\n   */\n  headers () {\n    return lowerCaseObjectKeys(\n      assign(\n        {},\n        this.methodDescriptor.headers,\n        this.requestParams[this.methodDescriptor.headersAttr]\n      )\n    )\n  },\n\n  /**\n   * Utility method to get a header value by name\n   *\n   * @param {String} name\n   *\n   * @return {String|Undefined}\n   */\n  header (name) {\n    return this.headers()[name.toLowerCase()]\n  },\n\n  body () {\n    return this.requestParams[this.methodDescriptor.bodyAttr]\n  },\n\n  auth () {\n    return this.requestParams[this.methodDescriptor.authAttr]\n  },\n\n  timeout () {\n    return this.requestParams[this.methodDescriptor.timeoutAttr]\n  },\n\n  /**\n   * Enhances current request returning a new Request\n   * @param {Object} extras\n   *   @param {Object} extras.params - it will be merged with current params\n   *   @param {Object} extras.headers - it will be merged with current headers\n   *   @param {String|Object} extras.body - it will replace the current body\n   *   @param {Object} extras.auth - it will replace the current auth\n   *   @param {Number} extras.timeout - it will replace the current timeout\n   */\n  enhance (extras) {\n    const headerKey = this.methodDescriptor.headersAttr\n    const bodyKey = this.methodDescriptor.bodyAttr\n    const authKey = this.methodDescriptor.authAttr\n    const timeoutKey = this.methodDescriptor.timeoutAttr\n    const requestParams = assign({}, this.requestParams, extras.params)\n\n    requestParams[headerKey] = assign({}, this.requestParams[headerKey], extras.headers)\n    extras.body && (requestParams[bodyKey] = extras.body)\n    extras.auth && (requestParams[authKey] = extras.auth)\n    extras.timeout && (requestParams[timeoutKey] = extras.timeout)\n\n    return new Request(this.methodDescriptor, requestParams)\n  },\n\n  /**\n   * Is the request expecting a binary response?\n   *\n   * @return {Boolean}\n   */\n  isBinary () {\n    return this.methodDescriptor.binary\n  }\n}\n\nexport default Request\n","import Manifest from './manifest'\nimport Request from './request'\nimport { assign } from './utils'\n\n/**\n * @typedef ClientBuilder\n * @param {Object} manifest - manifest definition with at least the `resources` key\n * @param {Function} GatewayClassFactory - factory function that returns a gateway class\n */\nfunction ClientBuilder (manifest, GatewayClassFactory, configs) {\n  if (!manifest) {\n    throw new Error(\n      `[Mappersmith] invalid manifest (${manifest})`\n    )\n  }\n\n  if (!GatewayClassFactory || !GatewayClassFactory()) {\n    throw new Error(\n      '[Mappersmith] gateway class not configured (configs.gateway)'\n    )\n  }\n\n  this.Promise = configs.Promise\n  this.manifest = new Manifest(manifest, configs)\n  this.GatewayClassFactory = GatewayClassFactory\n  this.maxMiddlewareStackExecutionAllowed = configs.maxMiddlewareStackExecutionAllowed\n}\n\nClientBuilder.prototype = {\n  build () {\n    const client = { _manifest: this.manifest }\n\n    this.manifest.eachResource((name, methods) => {\n      client[name] = this.buildResource(name, methods)\n    })\n\n    return client\n  },\n\n  buildResource (resourceName, methods) {\n    return methods.reduce((resource, method) => assign(resource, {\n      [method.name]: (requestParams) => {\n        const request = new Request(method.descriptor, requestParams)\n        return this.invokeMiddlewares(resourceName, method.name, request)\n      }\n    }), {})\n  },\n\n  invokeMiddlewares (resourceName, resourceMethod, initialRequest) {\n    const middleware = this.manifest.createMiddleware({ resourceName, resourceMethod })\n    const GatewayClass = this.GatewayClassFactory()\n    const gatewayConfigs = this.manifest.gatewayConfigs\n    const requestPhaseFailureContext = {\n      middleware: null,\n      returnedInvalidRequest: false,\n      abortExecution: false\n    }\n\n    const getInitialRequest = () => this.Promise.resolve(initialRequest)\n    const chainRequestPhase = (next, middleware) => () => {\n      const abort = (error) => {\n        requestPhaseFailureContext.abortExecution = true\n        throw error\n      }\n\n      return this.Promise\n        .resolve()\n        .then(() => middleware.prepareRequest(next, abort))\n        .then(request => {\n          if (request instanceof Request) {\n            return request\n          }\n\n          requestPhaseFailureContext.returnedInvalidRequest = true\n          const typeValue = typeof request\n          const prettyType = (typeValue === 'object' || typeValue === 'function')\n            ? request.name || typeValue\n            : typeValue\n\n          throw new Error(`[Mappersmith] middleware \"${middleware.__name}\" should return \"Request\" but returned \"${prettyType}\"`)\n        })\n        .catch(e => {\n          requestPhaseFailureContext.middleware = middleware.__name\n          throw e\n        })\n    }\n\n    const prepareRequest = middleware.reduce(chainRequestPhase, getInitialRequest)\n    let executions = 0\n\n    const executeMiddlewareStack = () => prepareRequest()\n      .catch(e => {\n        const { returnedInvalidRequest, abortExecution, middleware } = requestPhaseFailureContext\n        if (returnedInvalidRequest || abortExecution) {\n          throw e\n        }\n\n        const error = new Error(`[Mappersmith] middleware \"${middleware}\" failed in the request phase: ${e.message}`)\n        error.stack = e.stack\n        throw error\n      })\n      .then(finalRequest => {\n        executions++\n\n        if (executions > this.maxMiddlewareStackExecutionAllowed) {\n          throw new Error(\n            `[Mappersmith] infinite loop detected (middleware stack invoked ${executions} times). Check the use of \"renew\" in one of the middleware.`\n          )\n        }\n\n        const renew = executeMiddlewareStack\n        const chainResponsePhase = (next, middleware) => () => middleware.response(next, renew)\n        const callGateway = () => new GatewayClass(finalRequest, gatewayConfigs).call()\n        const execute = middleware.reduce(chainResponsePhase, callGateway)\n        return execute()\n      })\n\n    return new this.Promise((resolve, reject) => {\n      executeMiddlewareStack()\n        .then(response => resolve(response))\n        .catch(reject)\n    })\n  }\n}\n\nexport default ClientBuilder\n","/* global VERSION */\nimport ClientBuilder from './client-builder'\nimport { assign } from './utils'\n\nexport const version = VERSION\n\nexport const configs = {\n  context: {},\n  middleware: [],\n  Promise: typeof Promise === 'function' ? Promise : null,\n  fetch: typeof fetch === 'function' ? fetch : null, // eslint-disable-line no-undef\n\n  /**\n   * The maximum amount of executions allowed before it is considered an infinite loop.\n   * In the response phase of middleware, it's possible to execute a function called \"renew\",\n   * which can be used to rerun the middleware stack. This feature is useful in some scenarios,\n   * for example, re-fetching an invalid access token.\n\n   * This configuration is used to detect infinite loops, don't increase this value too much\n   * @default 2\n   */\n  maxMiddlewareStackExecutionAllowed: 2,\n\n  /**\n   * Gateway implementation, it defaults to \"lib/gateway/xhr\" for browsers and\n   * \"lib/gateway/http\" for node\n   */\n  gateway: null,\n  gatewayConfigs: {\n    /**\n     * Setting this option will fake PUT, PATCH and DELETE requests with a HTTP POST. It will\n     * add \"_method\" and \"X-HTTP-Method-Override\" with the original requested method\n     * @default false\n     */\n    emulateHTTP: false,\n\n    /**\n     * Setting this option will return HTTP status 408 (Request Timeout) when a request times\n     * out. When \"false\", HTTP status 400 (Bad Request) will be used instead.\n     * @default false\n     */\n    enableHTTP408OnTimeouts: false,\n\n    XHR: {\n      /**\n       * Indicates whether or not cross-site Access-Control requests should be made using credentials\n       * such as cookies, authorization headers or TLS client certificates.\n       * Setting withCredentials has no effect on same-site requests\n       *\n       * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n       *\n       * @default false\n       */\n      withCredentials: false,\n\n      /**\n       * For aditional configurations to the XMLHttpRequest object.\n       * @param {XMLHttpRequest} xhr\n       * @default null\n       */\n      configure: null\n    },\n\n    HTTP: {\n      /**\n       * For additional configurations to the http/https module\n       * For http: https://nodejs.org/api/http.html#http_http_request_options_callback\n       * For https: https://nodejs.org/api/https.html#https_https_request_options_callback\n       *\n       * @param {object} options\n       * @default null\n       */\n      configure: null\n    },\n\n    Fetch: {\n      /**\n       * Indicates whether the user agent should send cookies from the other domain in the case of cross-origin\n       * requests. This is similar to XHR’s withCredentials flag, but with three available values (instead of two):\n       *\n       * \"omit\": Never send cookies.\n       * \"same-origin\": Only send cookies if the URL is on the same origin as the calling script.\n       * \"include\": Always send cookies, even for cross-origin calls.\n       *\n       * https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials\n       *\n       * @default \"omit\"\n       */\n      credentials: 'omit'\n    }\n  }\n}\n\n/**\n * @param {Object} context\n */\nexport const setContext = (context) => {\n  configs.context = assign(configs.context, context)\n}\n\n/**\n * @param {Object} manifest\n */\nexport default function forge (manifest) {\n  const GatewayClassFactory = () => configs.gateway\n  return new ClientBuilder(manifest, GatewayClassFactory, configs).build()\n}\n","var lib = require('./mappersmith')\nvar _process, defaultGateway\n\n// Prevents webpack to load the nodejs processs polyfill\ntry { _process = eval('typeof process === \"object\" ? process : undefined') } catch (e) {} // eslint-disable-line no-eval\n\nif (typeof XMLHttpRequest !== 'undefined') {\n  // For browsers use XHR adapter\n  defaultGateway = require('./gateway/xhr').default\n} else if (typeof _process !== 'undefined') {\n  // For node use HTTP adapter\n  defaultGateway = require('./gateway/http').default\n}\n\nlib.configs.gateway = defaultGateway\nmodule.exports = lib\n","import { lowerCaseObjectKeys, assign } from './utils'\n\nconst REGEXP_CONTENT_TYPE_JSON = /^application\\/json/\n\n/**\n * @typedef Response\n * @param {Request} originalRequest, for auth it hides the password\n * @param {Integer} responseStatus\n * @param {String} responseData, defaults to null\n * @param {Object} responseHeaders, defaults to an empty object ({})\n * @param {Array<Error>} errors, defaults to an empty array ([])\n */\nfunction Response (originalRequest, responseStatus, responseData, responseHeaders, errors) {\n  if (originalRequest.requestParams && originalRequest.requestParams.auth) {\n    const maskedAuth = assign({}, originalRequest.requestParams.auth, { password: '***' })\n    this.originalRequest = originalRequest.enhance({ auth: maskedAuth })\n  } else {\n    this.originalRequest = originalRequest\n  }\n\n  this.responseStatus = responseStatus\n  this.responseData = responseData !== undefined ? responseData : null\n  this.responseHeaders = responseHeaders || {}\n  this.errors = errors || []\n  this.timeElapsed = null\n}\n\nResponse.prototype = {\n  /**\n   * @return {Request}\n   */\n  request () {\n    return this.originalRequest\n  },\n\n  /**\n   * @return {Integer}\n   */\n  status () {\n    // IE sends 1223 instead of 204\n    if (this.responseStatus === 1223) {\n      return 204\n    }\n\n    return this.responseStatus\n  },\n\n  /**\n   * Returns true if status is greater or equal 200 or lower than 400\n   *\n   * @return {Boolean}\n   */\n  success () {\n    const status = this.status()\n    return status >= 200 && status < 400\n  },\n\n  /**\n   * Returns an object with the headers. Header names are converted to\n   * lowercase\n   *\n   * @return {Object}\n   */\n  headers () {\n    return lowerCaseObjectKeys(this.responseHeaders)\n  },\n\n  /**\n   * Utility method to get a header value by name\n   *\n   * @param {String} name\n   *\n   * @return {String|Undefined}\n   */\n  header (name) {\n    return this.headers()[name.toLowerCase()]\n  },\n\n  /**\n   * Returns the original response data\n   */\n  rawData () {\n    return this.responseData\n  },\n\n  /**\n   * Returns the response data, if \"Content-Type\" is \"application/json\"\n   * it parses the response and returns an object\n   *\n   * @return {String|Object}\n   */\n  data () {\n    let data = this.responseData\n\n    if (this.isContentTypeJSON()) {\n      try { data = JSON.parse(this.responseData) } catch (e) {}\n    }\n\n    return data\n  },\n\n  isContentTypeJSON () {\n    return REGEXP_CONTENT_TYPE_JSON.test(this.headers()['content-type'])\n  },\n\n  /**\n   * Returns the last error instance that caused the request to fail\n   *\n   * @return {Error|null}\n   */\n  error () {\n    const lastError = this.errors[this.errors.length - 1] || null\n    if (typeof lastError === 'string') {\n      return new Error(lastError)\n    }\n\n    return lastError\n  },\n\n  /**\n   * Enhances current Response returning a new Response\n   *\n   * @param {Object} extras\n   *   @param {Integer} extras.status - it will replace the current status\n   *   @param {String} extras.rawData - it will replace the current rawData\n   *   @param {Object} extras.headers - it will be merged with current headers\n   *   @param {Error} extras.error    - it will be added to the list of errors\n   *\n   * @return {Response}\n   */\n  enhance (extras) {\n    return new Response(\n      this.request(),\n      extras.status || this.status(),\n      extras.rawData || this.rawData(),\n      assign({}, this.headers(), extras.headers),\n      [...this.errors, extras.error]\n    )\n  }\n}\n\nexport default Response\n","export const isTimeoutError = (e) => {\n  return e && e.name === 'TimeoutError'\n}\n\nexport const createTimeoutError = (message) => {\n  const error = new Error(message)\n  error.name = 'TimeoutError'\n  return error\n}\n","import { performanceNow, assign, toQueryString, isPlainObject } from './utils'\nimport { configs as defaultConfigs } from './mappersmith'\nimport Response from './response'\nimport { isTimeoutError } from './gateway/timeout-error'\n\nconst REGEXP_EMULATE_HTTP = /^(delete|put|patch)/i\n\nfunction Gateway (request, configs = {}) {\n  this.request = request\n  this.configs = configs\n  this.successCallback = function () {}\n  this.failCallback = function () {}\n}\n\nGateway.extends = (methods) => assign({}, Gateway.prototype, methods)\n\nGateway.prototype = {\n  options () {\n    return this.configs\n  },\n\n  shouldEmulateHTTP () {\n    return this.options().emulateHTTP &&\n      REGEXP_EMULATE_HTTP.test(this.request.method())\n  },\n\n  call () {\n    const timeStart = performanceNow()\n    return new defaultConfigs.Promise((resolve, reject) => {\n      this.successCallback = (response) => {\n        response.timeElapsed = performanceNow() - timeStart\n        resolve(response)\n      }\n\n      this.failCallback = (response) => {\n        response.timeElapsed = performanceNow() - timeStart\n        reject(response)\n      }\n\n      try {\n        this[this.request.method()].apply(this, arguments)\n      } catch (e) {\n        this.dispatchClientError(e.message, e)\n      }\n    })\n  },\n\n  dispatchResponse (response) {\n    response.success()\n      ? this.successCallback(response)\n      : this.failCallback(response)\n  },\n\n  dispatchClientError (message, error) {\n    if (isTimeoutError(error) && this.options().enableHTTP408OnTimeouts) {\n      this.failCallback(new Response(this.request, 408, message, {}, [error]))\n    } else {\n      this.failCallback(new Response(this.request, 400, message, {}, [error]))\n    }\n  },\n\n  prepareBody (method, headers) {\n    let body = this.request.body()\n\n    if (this.shouldEmulateHTTP()) {\n      body = body || {}\n      isPlainObject(body) && (body._method = method)\n      headers['x-http-method-override'] = method\n    }\n\n    const bodyString = toQueryString(body)\n\n    if (bodyString) {\n      // If it's not simple, let the browser (or the user) set it\n      if (isPlainObject(body)) {\n        headers['content-type'] = 'application/x-www-form-urlencoded;charset=utf-8'\n      }\n    }\n\n    return bodyString\n  }\n}\n\nexport default Gateway\n","import Gateway from '../gateway'\nimport Response from '../response'\nimport { assign, parseResponseHeaders, btoa } from '../utils'\nimport { createTimeoutError } from './timeout-error'\n\nconst toBase64 = window.btoa || btoa\n\nfunction XHR (request) {\n  Gateway.apply(this, arguments)\n}\n\nXHR.prototype = Gateway.extends({\n  get () {\n    const xmlHttpRequest = this.createXHR()\n    xmlHttpRequest.open('GET', this.request.url(), true)\n    this.setHeaders(xmlHttpRequest, {})\n    this.configureTimeout(xmlHttpRequest)\n    this.configureBinary(xmlHttpRequest)\n    xmlHttpRequest.send()\n  },\n\n  head () {\n    const xmlHttpRequest = this.createXHR()\n    xmlHttpRequest.open('HEAD', this.request.url(), true)\n    this.setHeaders(xmlHttpRequest, {})\n    this.configureTimeout(xmlHttpRequest)\n    this.configureBinary(xmlHttpRequest)\n    xmlHttpRequest.send()\n  },\n\n  post () {\n    this.performRequest('post')\n  },\n\n  put () {\n    this.performRequest('put')\n  },\n\n  patch () {\n    this.performRequest('patch')\n  },\n\n  delete () {\n    this.performRequest('delete')\n  },\n\n  configureBinary (xmlHttpRequest) {\n    if (this.request.isBinary()) {\n      xmlHttpRequest.responseType = 'blob'\n    }\n  },\n\n  configureTimeout (xmlHttpRequest) {\n    this.canceled = false\n    this.timer = null\n\n    const timeout = this.request.timeout()\n\n    if (timeout) {\n      xmlHttpRequest.timeout = timeout\n      xmlHttpRequest.addEventListener('timeout', () => {\n        this.canceled = true\n        clearTimeout(this.timer)\n        const error = createTimeoutError(`Timeout (${timeout}ms)`)\n        this.dispatchClientError(error.message, error)\n      })\n\n      // PhantomJS doesn't support timeout for XMLHttpRequest\n      this.timer = setTimeout(() => {\n        this.canceled = true\n        const error = createTimeoutError(`Timeout (${timeout}ms)`)\n        this.dispatchClientError(error.message, error)\n      }, timeout + 1)\n    }\n  },\n\n  configureCallbacks (xmlHttpRequest) {\n    xmlHttpRequest.addEventListener('load', () => {\n      if (this.canceled) {\n        return\n      }\n\n      clearTimeout(this.timer)\n      this.dispatchResponse(this.createResponse(xmlHttpRequest))\n    })\n\n    xmlHttpRequest.addEventListener('error', (e) => {\n      if (this.canceled) {\n        return\n      }\n\n      clearTimeout(this.timer)\n      const guessedErrorCause = e\n        ? e.message || e.name\n        : xmlHttpRequest.responseText\n\n      const errorMessage = 'Network error'\n      const enhancedMessage = guessedErrorCause ? `: ${guessedErrorCause}` : ''\n      const error = new Error(`${errorMessage}${enhancedMessage}`)\n      this.dispatchClientError(errorMessage, error)\n    })\n\n    const xhrOptions = this.options().XHR\n    if (xhrOptions.withCredentials) {\n      xmlHttpRequest.withCredentials = true\n    }\n\n    if (xhrOptions.configure) {\n      xhrOptions.configure(xmlHttpRequest)\n    }\n  },\n\n  performRequest (method) {\n    const requestMethod = this.shouldEmulateHTTP() ? 'post' : method\n    const xmlHttpRequest = this.createXHR()\n    xmlHttpRequest.open(requestMethod.toUpperCase(), this.request.url(), true)\n\n    const customHeaders = {}\n    const body = this.prepareBody(method, customHeaders)\n    this.setHeaders(xmlHttpRequest, customHeaders)\n    this.configureTimeout(xmlHttpRequest)\n    this.configureBinary(xmlHttpRequest)\n\n    const args = []\n    body && args.push(body)\n\n    xmlHttpRequest.send.apply(xmlHttpRequest, args)\n  },\n\n  createResponse (xmlHttpRequest) {\n    const status = xmlHttpRequest.status\n    const data = this.request.isBinary() ? xmlHttpRequest.response : xmlHttpRequest.responseText\n    const responseHeaders = parseResponseHeaders(xmlHttpRequest.getAllResponseHeaders())\n    return new Response(\n      this.request,\n      status,\n      data,\n      responseHeaders\n    )\n  },\n\n  setHeaders (xmlHttpRequest, customHeaders) {\n    const auth = this.request.auth()\n    if (auth) {\n      const username = auth.username || ''\n      const password = auth.password || ''\n      customHeaders['authorization'] = `Basic ${toBase64(`${username}:${password}`)}`\n    }\n\n    const headers = assign(customHeaders, this.request.headers())\n    Object\n      .keys(headers)\n      .forEach((headerName) => {\n        xmlHttpRequest.setRequestHeader(headerName, headers[headerName])\n      })\n  },\n\n  createXHR () {\n    const xmlHttpRequest = new XMLHttpRequest() // eslint-disable-line no-undef\n    this.configureCallbacks(xmlHttpRequest)\n    return xmlHttpRequest\n  }\n})\n\nexport default XHR\n"],"sourceRoot":""}